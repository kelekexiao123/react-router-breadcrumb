{"version":3,"sources":["../src/index.js"],"names":["flattenRoutes","arr","reduce","prev","item","push","concat","Array","isArray","items","getBreadcrumb","curSection","pathSection","matchRoute","find","path","ele","Error","exact","name","defaultRootPageName","getBreadcrumbs","location","res","pathname","split","breadcrumb","window","routes","BreadComponent"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA;AACA,IAAMA,gBAAgB,SAAhBA,aAAgB;AAAA,SACpBC,IAAIC,MAAJ,CAAW,UAASC,IAAT,EAAeC,IAAf,EAAqB;AAC9BD,SAAKE,IAAL,CAAUD,IAAV;AACA,WAAOD,KAAKG,MAAL,CACLC,MAAMC,OAAN,CAAcJ,KAAKK,KAAnB,IAA4BT,cAAcI,KAAKK,KAAnB,CAA5B,GAAwDL,IADnD,CAAP;AAGD,GALD,EAKG,EALH,CADoB;AAAA,CAAtB;;AAQA;AACA,IAAMM,gBAAgB,SAAhBA,aAAgB,OAAgD;AAAA,MAA7CV,aAA6C,QAA7CA,aAA6C;AAAA,MAA9BW,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AACpE,MAAMC,aAAab,cAAcc,IAAd,CAAmB,eAAO;AAAA,QACnCC,IADmC,GAC1BC,GAD0B,CACnCD,IADmC;;AAE3C,QAAI,CAACA,IAAL,EAAW;AACT,YAAM,IAAIE,KAAJ,CACJ,kDADI,CAAN;AAGD;AACD;AACA;AACA;AACA,WAAO,4BAAUL,WAAV,EAAuB,EAAEG,UAAF,EAAQG,OAAO,IAAf,EAAvB,CAAP;AACD,GAXkB,CAAnB;;AAaA;AACA,MAAIL,UAAJ,EAAgB;AACd,WAAO;AAAA;AAAA,QAAM,MAAMA,WAAWE,IAAvB;AAA8BF,iBAAWM,IAAX,IAAmBR;AAAjD,KAAP;AACD;AACD;AACA;AACA,MAAMS,sBAAsB,IAA5B;AACA,SACE;AAAA;AAAA,MAAM,MAAMR,WAAZ;AACGA,oBAAgB,GAAhB,GAAsBQ,mBAAtB,GAA4CT;AAD/C,GADF;AAKD,CA1BD;;AA4BA;AACO,IAAMU,0CAAiB,SAAjBA,cAAiB,QAAiC;AAAA,MAA9BrB,aAA8B,SAA9BA,aAA8B;AAAA,MAAfsB,QAAe,SAAfA,QAAe;;AAC7D;AACA,MAAIC,MAAM,EAAV;AACA;AACA;AACAD,WAASE,QAAT,CACGC,KADH,CACS,GADT,EACc,CADd,EAEGA,KAFH,CAES,GAFT,EAGGvB,MAHH,CAGU,UAACC,IAAD,EAAOQ,UAAP,EAAsB;AAC5B;AACA,QAAMC,cAAiBT,IAAjB,SAAyBQ,UAA/B;AACA,QAAMe,aAAahB,cAAc;AAC/BV,kCAD+B;AAE/BW,4BAF+B;AAG/BC;AAH+B,KAAd,CAAnB;;AAMA;AACAW,QAAIlB,IAAJ,CAASqB,UAAT;;AAEA;AACA,WAAOd,WAAP;AACD,GAjBH;;AAmBA,SAAOW,GAAP;AACD,CAzBM;;AA2BP;;kBACe;AAAA,MAACD,QAAD,uEAAYK,OAAOL,QAAnB;AAAA,MAA6BM,MAA7B,uEAAsC,EAAtC;AAAA,SAA6C,qBAAa;AACvE,QAAMC,iBACJ,8BAAC,SAAD;AACE,mBAAaR,eAAe;AAC1BrB,uBAAeA,cAAc4B,MAAd,CADW;AAE1BN;AAF0B,OAAf;AADf,MADF;AAQA,WAAOO,cAAP;AACD,GAVc;AAAA,C","file":"index.js","sourcesContent":["import React from 'react';\nimport { matchPath } from 'react-router';\n\n// 以递归的方式展平react router数组\nconst flattenRoutes = arr =>\n  arr.reduce(function(prev, item) {\n    prev.push(item);\n    return prev.concat(\n      Array.isArray(item.items) ? flattenRoutes(item.items) : item\n    );\n  }, []);\n\n// 对每个路径提供匹配的breadcrumb\nconst getBreadcrumb = ({ flattenRoutes, curSection, pathSection }) => {\n  const matchRoute = flattenRoutes.find(ele => {\n    const { path } = ele;\n    if (!path) {\n      throw new Error(\n        'React-Router 规定 Router 中每一个 route 必须包含 `path` 属性'\n      );\n    }\n    // 查找是否有匹配\n    // exact 为 react-router4+ 的属性，用于精确匹配路由\n    // matchPath 为 react-router4+ 提供的API，\n    return matchPath(pathSection, { path, exact: true });\n  });\n\n  // 返回breadcrumb的值，没有name属性的话就返回匹配子路径名\n  if (matchRoute) {\n    return <span path={matchRoute.path}>{matchRoute.name || curSection}</span>;\n  }\n  // 对于routes表中不存在的路径\n  // 根目录默认名称为首页.\n  const defaultRootPageName = '首页';\n  return (\n    <span path={pathSection}>\n      {pathSection === '/' ? defaultRootPageName : curSection}\n    </span>\n  );\n};\n\n// 将路径名split成若干部分，分别查找路由匹配项\nexport const getBreadcrumbs = ({ flattenRoutes, location }) => {\n  // 初始化匹配数组match\n  let res = [];\n  // 取得路径名，然后将路径分割成每一路由部分.\n  // 对每一部分执行一次`getBreadcrumb()`获取到面包屑名称.\n  location.pathname\n    .split('?')[0]\n    .split('/')\n    .reduce((prev, curSection) => {\n      // 将最后一个路由部分与当前部分合并，比如当路径为 `/x/xx/xxx` 时，pathSection分别检查 `/x` `/x/xx` `/x/xx/xxx` 的匹配，并分别生成面包屑\n      const pathSection = `${prev}/${curSection}`;\n      const breadcrumb = getBreadcrumb({\n        flattenRoutes,\n        curSection,\n        pathSection,\n      });\n\n      // 将面包屑导入到 res 数组中\n      res.push(breadcrumb);\n\n      // 传递给下一次reduce的路径部分\n      return pathSection;\n    });\n\n  return res;\n};\n\n// 将面包屑组件封装成高阶函数，方便自定义面包屑样式展示\nexport default (location = window.location, routes = []) => Component => {\n  const BreadComponent = (\n    <Component\n      breadcrumbs={getBreadcrumbs({\n        flattenRoutes: flattenRoutes(routes),\n        location,\n      })}\n    />\n  );\n  return BreadComponent;\n};\n"]}